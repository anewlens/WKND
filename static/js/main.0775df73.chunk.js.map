{"version":3,"sources":["redux/posts/posts.types.js","redux/posts/posts.reducer.js","redux/rootReducer.js","redux/store.js","Components/Header/Header.jsx","Components/LoginForm.js","Components/Login.js","data/posts.js","Components/Card/CardHeader.jsx","Components/Buttons/CustomButton.jsx","Components/Card/CardForm.jsx","Components/Card/Card.jsx","redux/posts/posts.actions.js","Components/Card/CardComment.jsx","Components/Card/CardPost.jsx","Components/CardList/CardList.jsx","App.js","index.js"],"names":["PostsActionTypes","SET_POSTS","ADD_POST","ADD_COMMENT","postsReducer","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","objectSpread","id","map","post","post_id","comments","rootReducer","combineReducers","posts","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","Header","react_default","a","createElement","className","LoginForm","_ref","loginHandler","_useState","useState","_useState2","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","onSubmit","placeholder","value","onChange","e","target","Login","Components_LoginForm","day","author","text","commentsNum","CardHeader","handleMenu","onClick","CustomButton","children","CardForm","label","react_textarea_autosize_esm_browser","Buttons_CustomButton","connect","dispatch","addNewPost","addPost","newPost","setNewPost","Card_CardHeader","Card_CardForm","preventDefault","CardComment","_ref$comment","comment","addComment","_ref$post","expanded","setExpanded","newComment","setNewComment","prev","Card_CardComment","key","CardList","currentPosts","useSelector","Components_Card_Card","filter","Card_CardPost","setCurrentPosts","setPosts","user","setUser","useEffect","Components_Header_Header","Components_CardList_CardList","Components_Login","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0775df73.chunk.js","sourcesContent":["const PostsActionTypes = {\r\n    SET_POSTS: 'SET_POSTS',\r\n    ADD_POST: 'ADD_POST',\r\n    ADD_COMMENT: 'ADD_COMMENT'\r\n}\r\n\r\nexport default PostsActionTypes","import PostsActionTypes from './posts.types' \r\n\r\nconst initial_state = null \r\n\r\nconst postsReducer = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case PostsActionTypes.SET_POSTS:\r\n            return action.payload\r\n        \r\n        case PostsActionTypes.ADD_POST:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: state.length +2,\r\n                    ...action.payload\r\n                }\r\n            ]\r\n\r\n        case PostsActionTypes.ADD_COMMENT: \r\n            return state.map(post => {\r\n                if (post.id === action.payload.post_id) {\r\n                    return {\r\n                        ...post,\r\n                        comments: [...post.comments, action.payload]\r\n                    }\r\n                } else {\r\n                    return post\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postsReducer","import { combineReducers } from 'redux'\r\nimport postsReducer from './posts/posts.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: postsReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport logger from 'redux-logger' \r\n\r\nimport rootReducer from './rootReducer' \r\n\r\nconst middlewares = []\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger)\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)))\r\n\r\nexport default store","import React from 'react'\r\nimport './header.scss'\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <div className=\"headerText\">\r\n            <h1 className=\"wkndTitle\">WKND</h1>\r\n        </div>\r\n        <div className=\"profileImg\" />\r\n    </header>\r\n    )\r\n\r\nexport default Header","import React, { useState } from 'react'\r\n\r\nconst LoginForm = ({ loginHandler }) => {\r\n    const [ username, setUsername ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n\r\n    const usernameHandler = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={loginHandler} className='loginForm'>\r\n            <input\r\n                type='text'\r\n                className='loginInput' \r\n                placeholder='username'\r\n                value={username}\r\n                onChange={usernameHandler} />\r\n            <input \r\n                type='password'\r\n                className='loginInput' \r\n                placeholder='password'\r\n                value={password}\r\n                onChange={passwordHandler} />\r\n            <button className={`loginButton ${username && password ? 'glow' : null}`}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\nimport '../styles/login.scss';\r\n\r\nconst Login = ({loginHandler}) => {\r\n    return (\r\n        <div className='login'>\r\n            <h1 className=\"loginTitle\">WKND</h1>\r\n            <LoginForm loginHandler={loginHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","const posts = [\r\n    {\r\n        id: 1,\r\n        day: 'FRI',\r\n        author: 'Steven',\r\n        text: 'New pizza place on broad looks good! Meet there at 8?',\r\n        commentsNum: 3,\r\n        comments: [\r\n            {\r\n                id: 4,\r\n                post_id: 1,\r\n                text: \"What's it called?\",\r\n                author: \"Katy\"\r\n            },\r\n            {\r\n                id: 5,\r\n                post_id: 1,\r\n                text: \"...and do they supply scissors\",\r\n                author: \"Robbie\"\r\n            },\r\n            {\r\n                id: 6,\r\n                post_id: 1,\r\n                text: \"Pizza Hutt\",\r\n                author: \"Steven\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        day: 'SAT',\r\n        author: 'Katy',\r\n        text: 'Anyone wanna play siege?',\r\n        commentsNum: 1,\r\n        comments: [\r\n            {\r\n                id: 7,\r\n                post_id: 2,\r\n                text: \"Gimme 20\",\r\n                author: \"Lionel\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        day: 'SAT',\r\n        author: 'Sherwyn',\r\n        text: 'Not gonna be free today, sorry guys.',\r\n        commentsNum: 0,\r\n        comments: []\r\n    }\r\n]\r\n\r\nexport default posts","import React from 'react'\r\n\r\nconst CardHeader = ({handleMenu, day}) => {\r\n    return (\r\n        <div className='card-header'>\r\n            <h2 className='card-header-day'>{day}</h2>\r\n            <button className='add' onClick={handleMenu}>\r\n                +\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardHeader","import React from 'react'\r\n\r\nconst CustomButton = ({onClick, children, className, type}) => (\r\n    <button onClick={onClick} className={className} type={type}>\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default CustomButton","import React from 'react'\r\nimport Textarea from 'react-textarea-autosize';\r\nimport CustomButton from '../Buttons/CustomButton'\r\n\r\nconst CardForm = ({onSubmit, className, value, onChange, label}) => (\r\n    <form className={`card-form ${className}`} onSubmit={onSubmit}>\r\n        <Textarea placeholder={`Add new ${label}`} value={value} onChange={e => onChange(e.target.value)} className=\"card-form-input\"/>\r\n        <CustomButton type='submit' className='card-form-button'>\r\n            Post\r\n        </CustomButton>\r\n    </form>\r\n)\r\n\r\nexport default CardForm","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../redux/posts/posts.actions'\r\nimport CardHeader from './CardHeader'\r\nimport CardForm from './CardForm';\r\nimport './card.scss'\r\n\r\nconst Card = ({day, children, addNewPost}) => {\r\n    const [newPost, setNewPost] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault() \r\n\r\n        if (newPost) {\r\n            const post = {\r\n                day,\r\n                author: 'Robbie',\r\n                text: newPost,\r\n                commentsNum: 0,\r\n                comments: []\r\n            }\r\n    \r\n            addNewPost(post)\r\n            setNewPost('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='card' id={day}>\r\n            <CardHeader day={day} />\r\n            {children}\r\n            <CardForm \r\n                onSubmit={handleSubmit} \r\n                className='card-form-post' \r\n                value={newPost} \r\n                onChange={setNewPost} \r\n                label='post' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewPost: post => dispatch(addPost(post)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Card)","import PostsActionTypes from './posts.types.js'\r\n\r\nexport const setPosts = posts => ({\r\n    type: PostsActionTypes.SET_POSTS,\r\n    payload: posts\r\n})\r\n\r\nexport const addPost = post => ({\r\n    type: PostsActionTypes.ADD_POST,\r\n    payload: post\r\n})\r\n\r\nexport const addComment = comment => ({\r\n    type: PostsActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n})","import React from 'react'\r\n\r\nconst CardComment = ({comment: {author, text}}) => (\r\n    <div className=\"card-comment\">\r\n        <h3 className=\"card-comment-author\">{author}</h3>\r\n        <p className=\"card-comment-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nexport default CardComment","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CardComment from './CardComment'\r\nimport { addComment } from '../../redux/posts/posts.actions'\r\nimport CardForm from './CardForm'\r\n\r\nconst CardPost = ({post: {id, author, text, comments}, addComment}) => {\r\n\r\n    const [expanded, setExpanded] = useState(false)\r\n    const [newComment, setNewComment] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (newComment) {\r\n            const comment = {\r\n                id: 8,\r\n                post_id: id,\r\n                text: newComment,\r\n                author: 'Robbie'\r\n            }\r\n            \r\n            addComment(comment)\r\n            setNewComment('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-post\">\r\n            <h3 className=\"card-post-author\">{author}</h3>\r\n            <p className=\"card-post-text\">{text}</p>\r\n                <button onClick={() => setExpanded(prev => !prev)} className=\"card-post-comments-num\">\r\n                    {comments.length} comments\r\n                </button>\r\n            <div className='card-post-comments'>\r\n                <div className=\"card-post-comments_list\">\r\n                    {\r\n                        expanded && comments.map(comment => <CardComment key={comment.id} comment={comment} />)\r\n                    }\r\n                </div>\r\n                <CardForm\r\n                    onSubmit={handleSubmit} \r\n                    className='card-form-comment' \r\n                    value={newComment} \r\n                    onChange={setNewComment} \r\n                    label='comment' />\r\n                {/* <form className=\"card-newPost\" onSubmit={handleSubmit}>\r\n                    <Textarea \r\n                        placeholder='Add new comment' \r\n                        value={newComment} \r\n                        onChange={setNewComment} \r\n                        className=\"card-newPost-input\"/>\r\n                    <CustomButton type='submit' className='card-newPost-button'>\r\n                        Post\r\n                    </CustomButton>\r\n                </form> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addComment: comment => dispatch(addComment(comment))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CardPost)","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Card from '../Card/Card'\r\nimport CardPost from '../Card/CardPost'\r\n\r\nconst CardList = () => {\r\n\r\n    const currentPosts = useSelector(state => state.posts)\r\n\r\n    return (\r\n        <section className=\"cardList\">\r\n            <Card day='FRI'>\r\n            {\r\n                currentPosts\r\n                .filter(post => post.day === 'FRI')\r\n                .map(post => <CardPost key={post.id} post={post} />)\r\n            }\r\n            </Card>\r\n            <Card day='SAT'>\r\n            {\r\n                currentPosts\r\n                .filter(post => post.day === 'SAT')\r\n                .map(post => <CardPost key={post.id} post={post} />)\r\n            }\r\n            </Card>\r\n            <Card day='SUN' />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CardList","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { setPosts } from './redux/posts/posts.actions'\nimport Header from './Components/Header/Header'\nimport Login from './Components/Login'\nimport posts from './data/posts'\nimport CardList from './Components/CardList/CardList';\nimport './styles/keyframes.scss'\n\nfunction App({setCurrentPosts}) {\n  const [ user, setUser ] = useState(0)\n\n  useEffect(() => {\n    setCurrentPosts(posts)\n  })\n\n  const loginHandler = e => {\n    e.preventDefault()\n    setUser(1)\n  }\n\n  if (!user) {\n    return <Login loginHandler={loginHandler} />\n  } else if (user) {\n    return (\n      <div className=\"App\">\n        <Header />\n        <CardList />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPosts: posts => dispatch(setPosts(posts))\n})\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}