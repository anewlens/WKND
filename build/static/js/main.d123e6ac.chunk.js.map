{"version":3,"sources":["redux/posts/posts.types.js","redux/posts/posts.reducer.js","redux/comments/comments.types.js","redux/comments/comments.reducer.js","redux/user/user.types.js","redux/user/user.reducer.js","redux/loading/loading.types.js","redux/loading/loading.reducer.js","redux/rootReducer.js","redux/store.js","redux/user/user.actions.js","redux/posts/posts.actions.js","redux/comments/comments.actions.js","redux/loading/loading.actions.js","services/posts.services.js","services/comments.services.js","services/data.services.js","Components/Header/Header.jsx","Components/Card/CardHeader.jsx","Components/Buttons/CustomButton.jsx","Components/SVGs/send4.svg","Components/Card/CardForm.jsx","Components/Card/Card.jsx","Components/Card/CardComment.jsx","Components/Card/CardPost.jsx","Components/CardList/CardList.jsx","Components/Loading/Loading.jsx","services/user.services.js","Components/ErrorMessage/ErrorMessage.jsx","Components/Inputs/FormInput.jsx","Components/Login/LoginForm.js","Components/Login/Login.js","services/groups.services.js","Components/Signup/SignupForm.jsx","Components/Signup/Signup.jsx","Components/UserWrapper/UserWrapper.jsx","App.js","index.js"],"names":["PostsActionTypes","SET_POSTS","ADD_POST","postsReducer","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","objectSpread","id","CommentsActionTypes","SET_COMMENTS","ADD_COMMENT","commentsReducer","UserActionTypes","SET_USER","userReducer","LoadingActionTypes","TOGGLE_LOADING","loadingReducer","rootReducer","combineReducers","posts","comments","user","loading","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","setUser","JSON","parse","localStorage","getItem","setItem","stringify","setPosts","setComments","toggleLoading","token","setToken","newToken","posts_services","getPosts","_getPosts","asyncToGenerator","regenerator_default","a","mark","_callee","req","config","wrap","_context","prev","next","headers","Authorization","abrupt","axios","get","then","data","map","_ref","text","createdAt","day","author","name","stop","_x","this","addPost","post","comments_services","post_id","group_id","catch","err","console","log","comment","getAll","all","postServices","commentServices","spread","Header","groupName","useSelector","group_name","react_default","createElement","className","CardHeader","handleMenu","onClick","CustomButton","children","_extends","assign","target","i","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","send4_ref2","send4_ref3","d","send4_SvgSend4","svgRef","props","width","height","viewBox","ref","ForwardRef","forwardRef","CardForm","__webpack_require__","p","onSubmit","value","onChange","label","react_textarea_autosize_esm_browser","placeholder","e","Buttons_CustomButton","style","fill","connect","dispatch","addNewPost","_useState","useState","_useState2","slicedToArray","newPost","setNewPost","Card_CardHeader","Card_CardForm","preventDefault","user_id","postsServices","message","CardComment","_ref$comment","addComment","_ref$post","expanded","setExpanded","_useState3","_useState4","newComment","setNewComment","Card_CardComment","commentsServices","CardList","currentPosts","currentComments","useEffect","Components_Card_Card","filter","Card_CardPost","Loading","user_services","login","_login","un","pw","res","username","password","sent","_x2","checkUser","_checkUser","_callee2","_context2","_x3","create","_create","_callee3","_context3","_x4","_x5","_x6","_x7","ErrorMessage","opacity","FormInput","required","setCurrentPosts","setCurrentComments","setUsername","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","loginHandler","_ref2","_ref3","userServices","t0","setTimeout","errorStyles","borderColor","Components_Inputs_FormInput","Components_ErrorMessage_ErrorMessage","Login","show","Login_LoginForm","groups_services","check","_check","gName","gID","setUN","setName","setPW","_useState7","_useState8","confirmPW","setConfirmPW","_useState9","_useState10","setGroupName","_useState11","_useState12","groupID","setGroupID","_useState13","_useState14","newError","signupHandler","taken","groupsServices","Signup","Signup_SignupForm","UserWrapper","view","setView","handleView","Components_Login_Login","Components_Signup_Signup","localUser","Components_Loading_Loading","Components_Header_Header","Components_CardList_CardList","Components_UserWrapper_UserWrapper","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d123e6ac.chunk.js","sourcesContent":["const PostsActionTypes = {\r\n    SET_POSTS: 'SET_POSTS',\r\n    ADD_POST: 'ADD_POST',\r\n}\r\n\r\nexport default PostsActionTypes","import PostsActionTypes from './posts.types' \r\n\r\nconst initial_state = null \r\n\r\nconst postsReducer = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case PostsActionTypes.SET_POSTS:\r\n            return action.payload\r\n        \r\n        case PostsActionTypes.ADD_POST:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: state.length +2,\r\n                    ...action.payload\r\n                }\r\n            ]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postsReducer","const CommentsActionTypes = {\r\n    SET_COMMENTS: 'SET_COMMENTS',\r\n    ADD_COMMENT: 'ADD_COMMENT'\r\n}\r\n\r\nexport default CommentsActionTypes","import CommentsActionTypes from './comments.types' \r\n\r\nconst initial_state = null \r\n\r\nconst commentsReducer = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case CommentsActionTypes.SET_COMMENTS:\r\n            return action.payload\r\n        \r\n        case CommentsActionTypes.ADD_COMMENT:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: state.length +2,\r\n                    ...action.payload\r\n                }\r\n            ]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default commentsReducer","const UserActionTypes = {\r\n    SET_USER: 'SET_USER'\r\n}\r\n\r\nexport default UserActionTypes","import UserActionTypes from './user.types' \r\n\r\nconst initial_state = null \r\n\r\nconst userReducer = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.SET_USER:\r\n            return action.payload\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const LoadingActionTypes = {\r\n    TOGGLE_LOADING: 'TOGGLE_LOADING'\r\n}\r\n\r\nexport default LoadingActionTypes","import LoadingActionTypes from './loading.types' \r\n\r\nconst initial_state = true \r\n\r\nconst loadingReducer = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case LoadingActionTypes.TOGGLE_LOADING:\r\n            return !state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loadingReducer","import { combineReducers } from 'redux'\r\nimport postsReducer from './posts/posts.reducer'\r\nimport commentsReducer from './comments/comments.reducer'\r\nimport userReducer from './user/user.reducer'\r\nimport loadingReducer from './loading/loading.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    comments: commentsReducer,\r\n    user: userReducer,\r\n    loading: loadingReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer' \r\n\r\nconst middlewares = [thunk]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger)\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)))\r\n\r\nexport default store","import UserActionTypes from './user.types.js'\r\n\r\nexport const setUser = user => {\r\n    const localUser = JSON.parse(window.localStorage.getItem('localUser'))\r\n\r\n    if (!localUser) {\r\n        window.localStorage.setItem('localUser', JSON.stringify(user))\r\n    }\r\n\r\n    return {\r\n        type: UserActionTypes.SET_USER,\r\n        payload: user\r\n    }\r\n}","import PostsActionTypes from './posts.types.js'\r\n\r\nexport const setPosts = posts => ({\r\n    type: PostsActionTypes.SET_POSTS,\r\n    payload: posts\r\n})\r\n\r\nexport const addPost = post => ({\r\n    type: PostsActionTypes.ADD_POST,\r\n    payload: post\r\n})","import CommentsActionTypes from './comments.types.js'\r\n\r\nexport const setComments = comments => ({\r\n    type: CommentsActionTypes.SET_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const addComment = comment => ({\r\n    type: CommentsActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n})","import LoadingActionTypes from './loading.types.js'\r\n\r\nexport const toggleLoading = () => ({\r\n    type: LoadingActionTypes.TOGGLE_LOADING,\r\n})","import axios from 'axios'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nexport default {\r\n    getPosts: async (req) => {\r\n        setToken(req.token)\r\n        \r\n        const config = {\r\n            headers: { Authorization: token }\r\n        }\r\n\r\n        return axios.get('/posts/combined', config)\r\n            .then(posts =>posts.data.map(\r\n                ({id, text, createdAt, day, user}) => ({\r\n                    id, text, createdAt, day, author: user.name\r\n                })\r\n            ))\r\n    },\r\n    addPost: (post, req) => {\r\n        setToken(req.token)\r\n\r\n        const config = {\r\n            headers: { Authorization: token }\r\n        }\r\n\r\n        return axios.post('/posts/add', post, config)\r\n    }\r\n}","import axios from 'axios'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nexport default {\r\n    getComments: (req) => {\r\n        setToken(req.token)\r\n\r\n        const config = {\r\n            headers: { Authorization: token }\r\n        }\r\n\r\n        return axios.get('/comments/combined', config)\r\n            .then(comments => comments.data.map(\r\n                ({id, text, createdAt, post_id, user, group_id}) => ({\r\n                    id, text, createdAt, post_id, group_id, author: user.name\r\n                })\r\n            ))\r\n            .catch(err => console.log(err))\r\n    },\r\n    addComment: (comment, user) => {\r\n        setToken(user.token)\r\n\r\n        const config = { \r\n            headers: { Authorization: token }\r\n        }\r\n\r\n        return axios.post('/comments/add', comment, config)\r\n    }\r\n}","import axios from 'axios'\r\nimport postServices from './posts.services'\r\nimport commentServices from './comments.services'\r\n\r\nconst getAll = (req) => \r\n    axios.all([postServices.getPosts(req), commentServices.getComments(req)])\r\n        .then(axios.spread((posts, comments) => {\r\n            return {posts, comments}\r\n        }))\r\n        \r\nexport default getAll\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './header.scss'\r\n\r\nconst Header = () => {\r\n\r\n    const groupName = useSelector(state => state.user.group_name)\r\n\r\n    return(\r\n        <header className='header'>\r\n            <h1 className=\"header-title\">WKND</h1>\r\n            <div className=\"header-group\">\r\n                {groupName}\r\n            </div>\r\n        </header>\r\n)\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nconst CardHeader = ({handleMenu, day}) => {\r\n    return (\r\n        <div className='card-header'>\r\n            <h2 className='card-header-day'>{day}</h2>\r\n            <button className='add' onClick={handleMenu}>\r\n                +\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardHeader","import React from 'react'\r\n\r\nconst CustomButton = ({onClick, children, className, type}) => (\r\n    <button onClick={onClick} className={className} type={type}>\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default CustomButton","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"send\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0l20 10-20 10v-20zM0 8v4l10-2-10-2z\"\n});\n\nvar SvgSend4 = function SvgSend4(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSend4, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send4.371155ee.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport Textarea from 'react-textarea-autosize';\r\nimport CustomButton from '../Buttons/CustomButton'\r\nimport {ReactComponent as Send} from '../SVGs/send4.svg'\r\n\r\nconst CardForm = ({onSubmit, className, value, onChange, label}) => (\r\n    <form className={`card-form ${className}`} onSubmit={onSubmit}>\r\n        <Textarea placeholder={`Add new ${label}`} value={value} onChange={e => onChange(e.target.value)} className=\"card-form-input\"/>\r\n        <CustomButton type='submit' className='card-form-button'>\r\n            <Send style={{fill: value ? 'hsl(184, 40%, 50%)' : 'hsl(0,0%,100%,.25)'}} />\r\n        </CustomButton>\r\n    </form>\r\n)\r\n\r\nexport default CardForm","import React, { useState } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { addPost } from '../../redux/posts/posts.actions'\r\nimport CardHeader from './CardHeader'\r\nimport CardForm from './CardForm';\r\nimport './card.scss'\r\nimport postsServices from '../../services/posts.services';\r\n\r\nconst Card = ({day, children, addNewPost}) => {\r\n    const [newPost, setNewPost] = useState('')\r\n    const user = useSelector(state => state.user)\r\n\r\n    const submitPost = e => {\r\n        e.preventDefault() \r\n\r\n        if (newPost) {\r\n            const post = {\r\n                text: newPost,\r\n                day,\r\n                user_id: user.id,\r\n                group_id: 1\r\n            }\r\n\r\n            postsServices.addPost(post, user)\r\n                .then(() => {\r\n                    console.log(user)\r\n                    addNewPost({...post, author: user.name})\r\n                    setNewPost('')\r\n                })\r\n              .catch(err => console.log('err', err.message))\r\n            }\r\n    }\r\n    \r\n    return (\r\n        <div className='card' id={day}>\r\n            <CardHeader day={day} />\r\n            {children}\r\n            <CardForm \r\n                onSubmit={submitPost} \r\n                className='card-form-post' \r\n                value={newPost} \r\n                onChange={setNewPost} \r\n                label='post' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNewPost: post => dispatch(addPost(post)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Card)","import React from 'react'\r\n\r\nconst CardComment = ({comment: {author, text}}) => (\r\n    <div className=\"card-comment\">\r\n        <h3 className=\"card-comment-author\">{author}</h3>\r\n        <p className=\"card-comment-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nexport default CardComment","import React, {useState} from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport CardComment from './CardComment'\r\nimport { addComment } from '../../redux/comments/comments.actions'\r\nimport CardForm from './CardForm'\r\nimport commentsServices from '../../services/comments.services'\r\n\r\nconst CardPost = ({post: {id, author, text}, comments, addComment}) => {\r\n\r\n    const [expanded, setExpanded] = useState(false)\r\n    const [newComment, setNewComment] = useState('')\r\n    const user = useSelector(state => state.user)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (newComment) {\r\n            const comment = {\r\n                text: newComment,\r\n                user_id: user.id,\r\n                post_id: id,\r\n                group_id: user.group_id\r\n            }\r\n            \r\n            console.log(\"COMMENT\", user)\r\n\r\n            commentsServices.addComment(comment, user)\r\n                .then(() => {\r\n                    addComment({...comment, author: user.name})\r\n                    setNewComment('')\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-post\">\r\n            <h3 className=\"card-post-author\">{author}</h3>\r\n            <p className=\"card-post-text\">{text}</p>\r\n                <button onClick={() => setExpanded(prev => !prev)} className=\"card-post-comments-num\">\r\n                    {comments.length} comments\r\n                </button>\r\n            <div className='card-post-comments'>\r\n                <div className=\"card-post-comments_list\">\r\n                    {\r\n                        expanded && comments.map(comment => <CardComment key={comment.id} comment={comment} />)\r\n                    }\r\n                </div>\r\n                <CardForm\r\n                    onSubmit={handleSubmit} \r\n                    className='card-form-comment' \r\n                    value={newComment} \r\n                    onChange={setNewComment} \r\n                    label='comment' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addComment: comment => dispatch(addComment(comment))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CardPost)","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Card from '../Card/Card'\r\nimport CardPost from '../Card/CardPost'\r\n\r\nconst CardList = () => {\r\n\r\n    const currentPosts = useSelector(state => state.posts)\r\n    const currentComments = useSelector(state => state.comments)\r\n\r\n    useEffect(() => {\r\n        console.log('hey hey hey hey', currentComments)\r\n    })\r\n\r\n    return (\r\n        <section className=\"cardList\">\r\n            <Card day='FRI'>\r\n                {\r\n                    currentPosts\r\n                    .filter(post => post.day === 'FRI')\r\n                    .map(post => \r\n                        <CardPost \r\n                        key={post.id} \r\n                        post={post}\r\n                        comments={currentComments.filter(comment => comment.post_id === post.id)} />)\r\n                }\r\n            </Card>\r\n            <Card day='SAT'>\r\n                {\r\n                    currentPosts\r\n                    .filter(post => post.day === 'SAT')\r\n                    .map(post => \r\n                        <CardPost \r\n                            key={post.id} \r\n                            post={post} \r\n                            comments={currentComments.filter(comment => comment.post_id === post.id)}/>)\r\n                }\r\n            </Card>\r\n            <Card day='SUN'>\r\n            {\r\n                    currentPosts\r\n                    .filter(post => post.day === 'SUN')\r\n                    .map(post => \r\n                        <CardPost \r\n                            key={post.id} \r\n                            post={post} \r\n                            comments={currentComments.filter(comment => comment.post_id === post.id)}/>)\r\n                }\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\nimport './Loading.scss'\r\n\r\nconst Loading = () => (\r\n    <h1 className=\"loading\">Loading...</h1>\r\n)\r\n\r\nexport default Loading","import axios from 'axios'\r\n\r\nexport default {\r\n    login: async (un, pw) => {\r\n        const res = await axios.post('/login', {username: un, password: pw})\r\n        return res.data\r\n    },\r\n    checkUser: async username => {\r\n        const res = await axios.post('/users', { username })\r\n        \r\n        if (res.data === 'taken') {\r\n            return true\r\n        } else if (res.data === 'not taken') {\r\n            return false\r\n        }\r\n    },\r\n    create: async (name, username, password, group_id) => {\r\n        const res = await axios.post('/users/add', {name, username, password, group_id})\r\n\r\n        return res.data\r\n    }\r\n}","import React from 'react'\r\nimport './ErrorMessage.scss'\r\n\r\nconst ErrorMessage = ({message}) => (\r\n    <div className=\"errorMessage\" style={{opacity: message ? .8 : 0}}>\r\n        {message ? message : null}\r\n    </div>\r\n)\r\n\r\nexport default ErrorMessage","import React from 'react'\r\nimport './FormInput.scss'\r\n\r\nconst FormInput = props => (\r\n    <div className='formInput'>\r\n        {\r\n            props.value && <label className=\"formInput-label\">{props.placeholder}</label>\r\n        }\r\n        <input className='formInput-input' {...props} required />\r\n    </div>\r\n)\r\n\r\nexport default FormInput","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userServices from '../../services/user.services'\r\nimport { setPosts } from '../../redux/posts/posts.actions'\r\nimport { setComments } from '../../redux/comments/comments.actions'\r\nimport { setUser } from '../../redux/user/user.actions'\r\nimport { toggleLoading } from '../../redux/loading/loading.actions'\r\nimport getAll from '../../services/data.services'\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\r\nimport FormInput from '../Inputs/FormInput'\r\nimport CustomButton from '../Buttons/CustomButton'\r\n\r\nconst LoginForm = ({setCurrentPosts, setCurrentComments, setUser, toggleLoading}) => {\r\n    const [ username, setUsername ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n    const loginHandler = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const user = await userServices.login(username, password)\r\n            \r\n            if (user) {\r\n                const {posts, comments} = await getAll(user)\r\n                setUser(user)\r\n                setCurrentPosts(posts)\r\n                setCurrentComments(comments)\r\n                toggleLoading()\r\n                localStorage.setItem('localUser', JSON.stringify(user))\r\n            }\r\n        } catch(error) {\r\n            console.log(\"ERROR\", error)\r\n\r\n            setErrorMessage('Invalid username/password')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n      const errorStyles = errorMessage ?\r\n        { borderColor: 'red' }\r\n        : null\r\n\r\n    return (\r\n        <form onSubmit={loginHandler} className='login-form'>\r\n            <FormInput\r\n                type='text'\r\n                placeholder='username'\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                style={errorStyles} />\r\n            <FormInput \r\n                type='password'\r\n                placeholder='password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                style={errorStyles} />\r\n            <CustomButton className={`login-button ${username && password ? 'glow' : null}`}>\r\n                Login\r\n            </CustomButton>\r\n\r\n            <ErrorMessage message={errorMessage} />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user)),\r\n    setCurrentPosts: posts => dispatch(setPosts(posts)),\r\n    setCurrentComments: comments => dispatch(setComments(comments)),\r\n    toggleLoading: () => dispatch(toggleLoading())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginForm)","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\nimport '../../styles/login.scss';\r\n\r\nconst Login = ({show, children}) => (\r\n    <div className={`login ${show ? 'show' : null}`}>\r\n        <h1 className=\"login-title\">WKND</h1>\r\n        <LoginForm/>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nexport default Login","import axios from 'axios'\r\n\r\nexport default {\r\n    check: async (gName, gID) => {\r\n        const res = await axios.post('/groups', {name: gName, id: gID})\r\n\r\n        if (res.data === 'group found') {\r\n            return true\r\n        } else if (res.data === 'no group found') {\r\n            return false\r\n        }\r\n    },\r\n    create: async (gName, gID) => {\r\n        const res = await axios.post('/groups/add', {name: gName, id: gID})\r\n\r\n        return res.data\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setUser } from '../../redux/user/user.actions'\r\nimport { setPosts } from '../../redux/posts/posts.actions'\r\nimport { setComments } from '../../redux/comments/comments.actions'\r\nimport { toggleLoading } from '../../redux/loading/loading.actions'\r\nimport userServices from '../../services/user.services'\r\nimport groupsServices from '../../services/groups.services'\r\nimport getAll from '../../services/data.services'\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\r\nimport FormInput from '../Inputs/FormInput'\r\nimport CustomButton from '../Buttons/CustomButton'\r\n\r\nconst SignupForm = ({setUser, setPosts, setComments, toggleLoading}) => {\r\n\r\n    const [un, setUN] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [pw, setPW] = useState('')\r\n    const [confirmPW, setConfirmPW] = useState('')\r\n    const [groupName, setGroupName] = useState('')\r\n    const [groupID, setGroupID] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n    const newError = message => {\r\n        setErrorMessage(message)\r\n        setTimeout(() => {\r\n            setErrorMessage(null)\r\n        }, 3000);\r\n    }\r\n\r\n    const signupHandler = async e => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            if (pw !== confirmPW) {\r\n                newError('Passwords should match')\r\n            } else {\r\n                const taken = await userServices.checkUser(un)\r\n                \r\n                if (!taken) {\r\n                    const groupCheck = await groupsServices.check(groupName, groupID)\r\n\r\n                    if (groupCheck) {\r\n                        userServices.create(name, un, pw, groupID)\r\n                            .then(user => {\r\n                                setUser(user)\r\n                                return getAll(user)\r\n                            })\r\n                            .then(({posts, comments}) => {\r\n                                setPosts(posts)\r\n                                setComments(comments)\r\n                                toggleLoading()\r\n                            })\r\n                    } else {\r\n                        newError('Group does not exist')\r\n                    }\r\n                } else if (taken) {\r\n                    newError('Username taken')\r\n                }\r\n            }\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    } \r\n\r\n    return (\r\n        <form className=\"signup-form\" onSubmit={signupHandler}>\r\n            <FormInput type='text' \r\n                value={name} \r\n                onChange={e => setName(e.target.value)} \r\n                placeholder='name' />\r\n            <FormInput type='text'\r\n                placeholder='username'\r\n                value={un}\r\n                onChange={e => setUN(e.target.value)} />\r\n            <FormInput type='password' \r\n                placeholder='password'\r\n                value={pw}\r\n                onChange={e => setPW(e.target.value)} />\r\n            <FormInput type='password'\r\n                placeholder='confirm pw'\r\n                value={confirmPW}\r\n                onChange={e => setConfirmPW(e.target.value)} />\r\n            \r\n            <div className=\"signup-form-group\">\r\n                <FormInput type='text' \r\n                    placeholder='group name'\r\n                    value={groupName}\r\n                    onChange={e => setGroupName(e.target.value)} />\r\n                <FormInput type='number' \r\n                    placeholder='group id'\r\n                    value={groupID}\r\n                    onChange={e => setGroupID(e.target.value)} />\r\n            </div>\r\n\r\n            <CustomButton \r\n                className={\r\n                    `signup-form-button ${\r\n                        un && pw && name && confirmPW && groupName && groupID \r\n                        ? 'glow' \r\n                        : null\r\n                    }`}>\r\n                Create\r\n            </CustomButton>\r\n\r\n            <ErrorMessage message={errorMessage} />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user)),\r\n    setPosts: posts => dispatch(setPosts(posts)),\r\n    setComments: comments => dispatch(setComments(comments)),\r\n    toggleLoading: () => dispatch(toggleLoading())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupForm)","import React from 'react'\r\nimport SignupForm from './SignupForm'\r\nimport './Signup.scss'\r\n\r\nconst Signup = ({show, children}) => {\r\n\r\n    return (\r\n        <main className={`signup ${show ? 'show' : null}`}>\r\n            <h1 className=\"signup-title\">WKND</h1>\r\n            <SignupForm />\r\n            {children}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, {useState} from 'react'\r\nimport Login from '../Login/Login'\r\nimport Signup from '../Signup/Signup'\r\nimport './UserWrapper.scss'\r\nimport CustomButton from '../Buttons/CustomButton'\r\n\r\nconst UserWrapper = () => {\r\n    const [view, setView] = useState('login')\r\n\r\n    function handleView() {\r\n        console.log('click')\r\n        if (view === 'login') {\r\n            setView('sign up')\r\n        } else if (view === 'sign up') {\r\n            setView('login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='userWrapper'>\r\n            <Login show={view === 'login'}>\r\n                <CustomButton onClick={handleView} className='userWrapper-button'>\r\n                    Don't have an account?\r\n                </CustomButton>\r\n            </Login>\r\n            <Signup show={view === 'sign up'}>\r\n                <CustomButton onClick={handleView} className='userWrapper-button'>\r\n                        Have an account?\r\n                    </CustomButton>    \r\n            </Signup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserWrapper","import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux'\nimport { setUser } from './redux/user/user.actions';\nimport { setPosts } from './redux/posts/posts.actions';\nimport { setComments } from './redux/comments/comments.actions';\nimport { toggleLoading } from './redux/loading/loading.actions';\nimport getAll from './services/data.services';\nimport Header from './Components/Header/Header'\nimport CardList from './Components/CardList/CardList';\nimport Loading from './Components/Loading/Loading';\nimport UserWrapper from './Components/UserWrapper/UserWrapper';\n\nfunction App({setUser, setComments, setPosts, toggleLoading}) {\n  const user = useSelector(state => state.user)\n  const loading = useSelector(state => state.loading)\n\n  useEffect(() => {\n    const localUser = JSON.parse(window.localStorage.getItem('localUser'))\n  \n    if (localUser) {\n      setUser(localUser)\n\n      getAll(localUser)\n        .then(({posts, comments}) => {    \n          setPosts(posts)\n          setComments(comments)\n          toggleLoading()\n        })\n    }\n  }, [setUser, setPosts, setComments, toggleLoading])\n\n  if (!user) {\n    return <UserWrapper />\n  } else if (!loading) {\n    return (\n      <div className=\"App\">\n        <Header />\n        <CardList />\n      </div>\n    )\n  } else {\n    return <Loading />\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: user => dispatch(setUser(user)),\n  setPosts: posts => dispatch(setPosts(posts)),\n  setComments: comments => dispatch(setComments(comments)),\n  toggleLoading: () => dispatch(toggleLoading())\n})\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/keyframes.scss'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}